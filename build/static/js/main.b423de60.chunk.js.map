{"version":3,"sources":["components/Card/Card.tsx","services/home.service.ts","pages/Home/Home.tsx","reportWebVitals.ts","pages/Keyword/Keyword.tsx","index.tsx"],"names":["useStyles","makeStyles","root","marginTop","marginBottom","media","height","backgroundSize","content","btn","margin","bestSeller","marginLeft","MediaCard","props","classes","Card","className","href","url","target","style","textDecoration","CardActionArea","CardMedia","image","img","title","CardContent","Typography","variant","color","component","CardActions","Button","size","getProduct","a","headers","axios","get","res","console","log","data","status","response","getProductKeyword","keyword","post","Home","useState","amazonData","setAmazonData","loading","setLoading","error","setError","useEffect","getProductItems","Container","Row","map","Col","md","img_url","product_url","best_seller_name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Keyword","id","useParams","RouterUrl","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b423de60.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  media: {\n    height: 140,\n    backgroundSize: 'contain',\n  },\n  content: {\n    height: 80\n  },\n  btn: {\n    margin: 'auto'\n  },\n  bestSeller: {\n    marginLeft: 16,\n    marginTop: 16\n  }\n});\n\nexport default function MediaCard(props: any) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} >\n      <a href={props.url} target=\"_blank\" style={{ textDecoration: \"none\" }} >\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={props.img}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.content}\n            >\n              {props.title}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            size=\"small\"\n            className={classes.btn}\n            variant=\"outlined\"\n            href={props.url}\n            color=\"primary\"\n            target=\"_blank\"\n          >\n            Check Price\n          </Button>\n        </CardActions>\n      </a>\n    </Card>\n  );\n}","import axios from 'axios';\n\nexport const getProduct = async () => {\n    try {\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n        const res = await axios.get('https://toptechbestcool.com/api/get-product', { headers });\n        console.log(res);\n        return { data: res.data.data, status: 200 }\n    } catch (err) {\n        return { status: err && err.response && err.response.status };\n    }\n}\n\nexport const getProductKeyword = async (keyword: string) => {\n    try {\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n        const res = await axios.post('https://toptechbestcool.com/api/get-product-by-keyword', { keyword }, { headers });\n        console.log(res);\n        return { data: res.data.data, status: 200 }\n    } catch (err) {\n        return { status: err && err.response && err.response.status };\n    }\n}","import React, { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getProduct } from '../../services/home.service';\nimport './Home.css';\nimport { Product } from './Home.models';\n\nconst Home = () => {\n    const [amazonData, setAmazonData] = useState<Product[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        getProductItems();\n    }, []);\n\n    const getProductItems = async () => {\n        setLoading(true);\n        const res: any = await getProduct();\n        if (res?.status === 200) {\n            setAmazonData(res.data);\n        } else {\n            setError(true);\n        }\n        setLoading(false);\n    }\n\n    return (\n        <>\n            {loading && (\n                <div className=\"loading\">Loading&#8230;</div>\n            )}\n            <Container>\n                <h2 style={{ marginTop: 14 }}>Amazon Best Seller</h2>\n                <Row>\n                    {amazonData.map((data: Product) => (\n                        <Col md={4}>\n                            <Card\n                                img={data.img_url}\n                                title={data.title}\n                                url={data.product_url}\n                                bestSeller={data.best_seller_name}\n                            />\n                        </Col>\n                    ))}\n                </Row>\n            </Container>\n            {error && (\n                <p>Something went wrong please try again later...</p>\n            )}\n        </>\n    );\n}\n\nexport default Home;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '../../components/Card';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getProductKeyword } from '../../services/home.service';\nimport '../Home/Home.css';\nimport { Product } from '../Home/Home.models';\n\nconst Keyword = (props: any) => {\n    const { id } = useParams<{ id: string }>();\n    const [amazonData, setAmazonData] = useState<Product[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        getProductItems();\n    }, []);\n\n    const getProductItems = async () => {\n        setLoading(true);\n        const res: any = await getProductKeyword(id);\n        if (res?.status === 200) {\n            setAmazonData(res.data);\n        } else {\n            setError(true);\n        }\n        setLoading(false);\n    }\n\n    return (\n        <>\n            {loading && (\n                <div className=\"loading\">Loading&#8230;</div>\n            )}\n            <Container>\n                <h2 style={{ marginTop: 14 }}>Amazon Best Seller By Keyword</h2>\n                <Row>\n                    {amazonData.map((data: Product) => (\n                        <Col md={4}>\n                            <Card\n                                img={data.img_url}\n                                title={data.title}\n                                url={data.product_url}\n                                bestSeller={data.best_seller_name}\n                            />\n                        </Col>\n                    ))}\n                </Row>\n            </Container>\n            {error && (\n                <p>Something went wrong please try again later...</p>\n            )}\n        </>\n    )\n};\n\nexport default Keyword;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Keyword from './pages/Keyword';\n\nconst RouterUrl = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:id\">\n          <Keyword />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouterUrl />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}